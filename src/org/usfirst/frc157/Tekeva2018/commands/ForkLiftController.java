// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package src.org.usfirst.frc157.Tekeva2018.commands;
import edu.wpi.first.wpilibj.command.Command ;
import src.org.usfirst.frc157.Tekeva2018.Robot;

/**
 *
 */
public class ForkLiftController extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ForkLiftController() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.forkliftElevator);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double up = Robot.oi.getGamePadController().getRawAxis(Robot.oi.R2);
        double down = -Robot.oi.getGamePadController().getRawAxis(Robot.oi.L2);
        double JoyChange = -Robot.oi.OpBox().getRawAxis(Robot.oi.JoyY);

        double change = up + down;
        change += JoyChange;
        if (change > 0.01)
        {
            Robot.forkliftElevator.move(change, Robot.forkliftElevator.HIGH);
        }
        else if (change < -0.01)
        {
            Robot.forkliftElevator.move(change, Robot.forkliftElevator.LOW);
        }
        else
        {
            Robot.forkliftElevator.stop();
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
